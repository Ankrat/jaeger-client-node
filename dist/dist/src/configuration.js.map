{"version":3,"sources":["../../src/configuration.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_const_sampler","require","_const_sampler2","_interopRequireDefault","_probabilistic_sampler","_probabilistic_sampler2","_ratelimiting_sampler","_ratelimiting_sampler2","_remote_reporter","_remote_reporter2","_composite_reporter","_composite_reporter2","_logging_reporter","_logging_reporter2","_remote_sampler","_remote_sampler2","_metrics","_metrics2","_tracer","_tracer2","_udp_sender","_udp_sender2","_opentracing","_opentracing2","_constants","constants","_interopRequireWildcard","obj","__esModule","newObj","hasOwnProperty","call","default","_classCallCheck","instance","TypeError","jaegerSchema","Configuration","_getSampler","config","type","sampler","param","host","port","refreshIntervalMs","Error","SAMPLER_TYPE_PROBABILISTIC","SAMPLER_TYPE_RATE_LIMITING","SAMPLER_TYPE_CONST","SAMPLER_TYPE_REMOTE","serviceName","refreshInterval","_getReporter","options","reporterConfig","reporters","senderConfig","reporter","logSpans","push","logger","flushIntervalMs","agentHost","agentPort","sender","remoteReporter","initTracer","arguments","undefined","metrics","disable","Tracer","info","name","tags"],"mappings":"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","file":"configuration.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar _const_sampler = require('./samplers/const_sampler');\n\nvar _const_sampler2 = _interopRequireDefault(_const_sampler);\n\nvar _probabilistic_sampler = require('./samplers/probabilistic_sampler');\n\nvar _probabilistic_sampler2 = _interopRequireDefault(_probabilistic_sampler);\n\nvar _ratelimiting_sampler = require('./samplers/ratelimiting_sampler');\n\nvar _ratelimiting_sampler2 = _interopRequireDefault(_ratelimiting_sampler);\n\nvar _remote_reporter = require('./reporters/remote_reporter');\n\nvar _remote_reporter2 = _interopRequireDefault(_remote_reporter);\n\nvar _composite_reporter = require('./reporters/composite_reporter');\n\nvar _composite_reporter2 = _interopRequireDefault(_composite_reporter);\n\nvar _logging_reporter = require('./reporters/logging_reporter');\n\nvar _logging_reporter2 = _interopRequireDefault(_logging_reporter);\n\nvar _remote_sampler = require('./samplers/remote_sampler');\n\nvar _remote_sampler2 = _interopRequireDefault(_remote_sampler);\n\nvar _metrics = require('./metrics/metrics');\n\nvar _metrics2 = _interopRequireDefault(_metrics);\n\nvar _tracer = require('./tracer');\n\nvar _tracer2 = _interopRequireDefault(_tracer);\n\nvar _udp_sender = require('./reporters/udp_sender');\n\nvar _udp_sender2 = _interopRequireDefault(_udp_sender);\n\nvar _opentracing = require('opentracing');\n\nvar _opentracing2 = _interopRequireDefault(_opentracing);\n\nvar _constants = require('./constants.js');\n\nvar constants = _interopRequireWildcard(_constants);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar jaegerSchema = {\n    'id': '/jaeger',\n    'type': 'object',\n    'properties': {\n        'serviceName': { 'type': 'string' },\n        'disable': { 'type': 'boolean' },\n        'sampler': {\n            'properties': {\n                'type': { 'type': 'string' },\n                'param': { 'type': 'number' },\n                'host': { 'type': 'string' },\n                'port': { 'type': 'number' },\n                'refreshIntervalMs': { 'type': 'number' }\n            },\n            'required': ['type', 'param'],\n            'additionalProperties': false\n        },\n        'reporter': {\n            'properties': {\n                'logSpans': { 'type': 'boolean' },\n                'agentHost': { 'type': 'string' },\n                'agentPort': { 'type': 'number' },\n                'flushIntervalMs': { 'type': 'number' }\n            },\n            'additionalProperties': false\n        }\n    }\n};\n\nvar Configuration = function () {\n    function Configuration() {\n        _classCallCheck(this, Configuration);\n    }\n\n    _createClass(Configuration, null, [{\n        key: '_getSampler',\n        value: function _getSampler(config) {\n            var type = config.sampler.type;\n            var param = config.sampler.param;\n            var host = config.sampler.host;\n            var port = config.sampler.port;\n            var refreshIntervalMs = config.sampler.refreshIntervalMs;\n\n            if (typeof param !== 'number') {\n                throw new Error('Expecting sampler.param to be a number. Received ' + param);\n            }\n\n            var sampler = void 0;\n            if (type === constants.SAMPLER_TYPE_PROBABILISTIC) {\n                sampler = new _probabilistic_sampler2.default(param);\n            }\n\n            if (type === constants.SAMPLER_TYPE_RATE_LIMITING) {\n                sampler = new _ratelimiting_sampler2.default(param);\n            }\n\n            if (type === constants.SAMPLER_TYPE_CONST) {\n                sampler = new _const_sampler2.default(param === 1);\n            }\n\n            if (type === constants.SAMPLER_TYPE_REMOTE) {\n                sampler = new _remote_sampler2.default(config.serviceName, {\n                    sampler: new _probabilistic_sampler2.default(param),\n                    host: host,\n                    port: port,\n                    refreshInterval: refreshIntervalMs\n                });\n            }\n\n            return sampler;\n        }\n    }, {\n        key: '_getReporter',\n        value: function _getReporter(config, options) {\n            var reporterConfig = {};\n            var reporters = [];\n            var senderConfig = {};\n            if (config.reporter) {\n                if (config.reporter.logSpans) {\n                    reporters.push(new _logging_reporter2.default(options.logger));\n                }\n\n                if (config.reporter.flushIntervalMs) {\n                    reporterConfig['bufferFlushInterval'] = config.reporter.flushIntervalMs;\n                }\n\n                if (config.reporter.agentHost) {\n                    senderConfig['host'] = config.reporter.agentHost;\n                }\n\n                if (config.reporter.agentPort) {\n                    senderConfig['port'] = config.reporter.agentPort;\n                }\n            }\n            var sender = new _udp_sender2.default(senderConfig);\n            var remoteReporter = new _remote_reporter2.default(sender, reporterConfig);\n            if (reporters.length == 0) {\n                return remoteReporter;\n            }\n            reporters.push(remoteReporter);\n            return new _composite_reporter2.default(reporters);\n        }\n\n        /**\n         * Initialize and return a new instance of Jaeger Tracer.\n         * \n         * The config dictionary is not validated for adherence to the schema above.\n         * Such validation can be performed like this:\n         * \n         *     import {Validator} from 'jsonschema';\n         * \n         *     let v = new Validator();\n         *     v.validate(config, jaegerSchema, {\n         *       throwError: true\n         *     });\n         * \n         * @param {Object} config - configuration matching the jaegerSchema definition.\n         * @param {Object} options - options\n         * @param {Object} [options.reporter] - if provided, this reporter will be used.\n         *        Otherwise a new reporter will be created according to the description\n         *        in the config.\n         * @param {Object} [options.metrics] - a metrics factory (see ./_flow/metrics.js)\n         * @param {Object} [options.logger] - a logger (see ./_flow/logger.js)\n         * @param {Object} [options.tags] - set of key-value pairs which will be set\n         *        as process-level tags on the Tracer itself.\n         */\n\n    }, {\n        key: 'initTracer',\n        value: function initTracer(config) {\n            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            var reporter = void 0;\n            var sampler = void 0;\n            if (options.metrics) {\n                options.metrics = new _metrics2.default(options.metrics);\n            }\n            if (config.disable) {\n                return new _opentracing2.default.Tracer();\n            } else {\n                if (config.sampler) {\n                    sampler = Configuration._getSampler(config);\n                } else {\n                    sampler = new _remote_sampler2.default(config.serviceName, options);\n                }\n\n                if (!options.reporter) {\n                    reporter = Configuration._getReporter(config, options);\n                } else {\n                    reporter = options.reporter;\n                }\n            }\n\n            if (options.logger) {\n                options.logger.info('Initializing Jaeger Tracer with ' + reporter.name() + ' and ' + sampler.name());\n            }\n\n            return new _tracer2.default(config.serviceName, reporter, sampler, {\n                metrics: options.metrics,\n                logger: options.logger,\n                tags: options.tags\n            });\n        }\n    }]);\n\n    return Configuration;\n}();\n\nexports.default = Configuration;\n//# sourceMappingURL=configuration.js.map"]}